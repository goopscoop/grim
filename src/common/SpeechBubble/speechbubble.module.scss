// This solution uses transforms and a caret mixin.
// What will yours be? Fork this pen and share
// your solution in this comments.

/// REQUIRED
/// ==========================================================
$black: #292D34;
$white: #DEFDF7;

$gutter: 20px;
$caret-unit: 25px;


/// Opposite Direction
/// ==========================================================
/// Returns the opposite direction of each direction in a list
/// @author Hugo Giraudel
/// @param {List} $directions - List of initial directions
/// @return {List} - List of opposite directions

@function opposite-direction($directions) {
  $opposite-directions: ();
  $direction-map: (
    'top': 'bottom',
    'right': 'left',
    'bottom': 'top',
    'left': 'right',
    'center': 'center',
    'ltr': 'rtl',
    'rtl': 'ltr'
  );

  @each $direction in $directions {
    $direction: to-lower-case($direction);

    @if map-has-key($direction-map, $direction) {
      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));
    } @else {
      @warn "No opposite direction can be found for `#{$direction}`. Direction omitted.";
    }
  }

  @return $opposite-directions;
}

/// Unit Removal
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

/// Triangle Mixin
/// ==========================================================

@mixin caret($point, $border-width, $color) {
  $opposite: opposite-direction($point);
  border: $border-width solid transparent;
  border-#{$opposite}: $border-width solid $color;
  border-#{$point}: 0;
  height: 0;
  width: 0;
}


/// Component
/// ==========================================================

.speechBubble {
  filter: drop-shadow(-1px -1px 2px rgba(black, .10)) drop-shadow(1px 2px 2px rgba(black, .15));
  position: absolute;
	margin: 0;
  padding: 20px;
	font-family: 'East Sea Dokdo', cursive;
  font-size: 2rem;
  font-weight: 400;
  background: $white;
	color: $black;
  z-index: 10001;
  box-shadow: 5px 5px 6px;

  &::before {
    @include caret(bottom, ($caret-unit / 2), $white);
    border-top-width: $caret-unit;
    content: '';
    display: block;
    position: absolute;
    left: 8vw;
    bottom: -$caret-unit;
    transform-origin: center;
    transform: rotate(90deg) skew(-(strip-unit($caret-unit))+deg) translateY($caret-unit / 1.5);
  }
}

.clickText {
  font-size: 14px;
  color: gray;
  position: absolute;
  bottom: 3px;
  right: 3px;
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
  monospace;
}